@model IEnumerable<marketimnet.Core.Entities.Product>
@{
    ViewData["Title"] = "Anasayfa";
}

@Html.AntiForgeryToken()

<div class="w-100 p-0">
    <!-- Banner Area -->
    <section class="banner-area mb-4">
        <div id="homeCarousel" class="carousel slide" data-bs-ride="carousel">
            <div class="carousel-indicators">
                <button type="button" data-bs-target="#homeCarousel" data-bs-slide-to="0" class="active"></button>
                <button type="button" data-bs-target="#homeCarousel" data-bs-slide-to="1"></button>
            </div>
            <div class="carousel-inner">
                <div class="carousel-item active">
                    <img src="~/img/banner1.jpg" class="d-block w-100" style="max-height: 400px; object-fit: cover;" alt="Banner 1" onerror="this.src='https://via.placeholder.com/1200x400?text=Marketimnet+Banner'">
                    <div class="carousel-caption d-none d-md-block">
                        <h5>Marketimnet'e Hoş Geldiniz</h5>
                        <p>Güvenli alışverişin adresi</p>
                    </div>
                </div>
                <div class="carousel-item">
                    <img src="~/img/banner2.jpg" class="d-block w-100" style="max-height: 400px; object-fit: cover;" alt="Banner 2" onerror="this.src='https://via.placeholder.com/1200x400?text=Kampanyalar'">
                    <div class="carousel-caption d-none d-md-block">
                        <h5>Kampanyaları Kaçırmayın</h5>
                        <p>En yeni ürünler en uygun fiyatlarla</p>
                    </div>
                </div>
            </div>
            <button class="carousel-control-prev" type="button" data-bs-target="#homeCarousel" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Önceki</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#homeCarousel" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Sonraki</span>
            </button>
        </div>
    </section>

    <!-- Products Header -->
    <div class="text-center mb-4">
        <h2>Ürünlerimiz</h2>
        <p class="text-muted">Marketimnet kalitesiyle sizlerle</p>
    </div>

    <!-- Products -->
    <div class="products-wrapper">
        @if (Model != null && Model.Any())
        {
            <div class="products-grid">
                @foreach (var product in Model)
                {
                    <div class="product-item">
                        <article class="card h-100 product-card">
                            <a href="@Url.Action("Detail", "Products", new { id = product.Id })" class="product-link">
                                <div class="card-img-container">
                                    @if (!string.IsNullOrEmpty(product.ImageUrl))
                                    {
                                        <img src="@product.ImageUrl" class="card-img-top" alt="@product.Name">
                                    }
                                    else
                                    {
                                        <img src="https://via.placeholder.com/300x300?text=Ürün+Resmi" class="card-img-top" alt="@product.Name">
                                    }
                                </div>
                                <div class="card-body d-flex flex-column">
                                    <div class="flex-grow-1">
                                        <h5 class="card-title">@product.Name</h5>
                                        <p class="card-category text-muted mb-2">@(product.Category?.Name ?? "Genel")</p>
                                        <p class="card-text product-description">
                                            @(string.IsNullOrEmpty(product.Description)
                                                ? "Ürün açıklaması bulunmamaktadır."
                                                : (product.Description.Length > 100
                                                    ? product.Description.Substring(0, 97) + "..."
                                                    : product.Description))
                                        </p>
                                    </div>
                                    <div class="mt-auto">
                                        <div class="d-flex justify-content-between align-items-center mb-2">
                                            <span class="product-price h4 mb-0">@product.Price.ToString("c")</span>
                                        </div>
                                    </div>
                                </div>
                            </a>
                            <div class="card-footer bg-transparent border-0 p-3">
                                <button class="btn btn-primary w-100 add-to-cart" data-product-id="@product.Id">
                                    <i class="fas fa-shopping-cart me-2"></i>Sepete Ekle
                                </button>
                            </div>
                        </article>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="alert alert-info text-center">
                <i class="fas fa-info-circle me-2"></i> Henüz ürün eklenmemiş.
            </div>
        }
    </div>
</div>

<style>
    .w-100 {
        width: 100% !important;
        padding: 0 !important;
        margin: 0 !important;
        max-width: none !important;
    }

    .banner-area {
        width: 100%;
        padding: 0;
        margin: 0;
    }

    .products-wrapper {
        width: 100%;
        padding: 0;
        margin: 0;
    }

    .products-grid {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 1.5rem;
        width: 100%;
        padding: 0 1rem;
    }

    /* Başlık kısmı için margin düzenlemesi */
    .text-center.mb-4 {
        margin: 2rem 0;
    }

    .product-item {
        width: 100%;
        min-width: 0;
        margin: 0;
        padding: 0;
    }

    .product-link {
        text-decoration: none;
        color: inherit;
        display: block;
        height: 100%;
    }

    .product-link:hover {
        text-decoration: none;
        color: inherit;
    }

    .product-card {
        transition: transform 0.3s, box-shadow 0.3s;
        border: none;
        border-radius: 0.5rem;
        overflow: hidden;
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        height: 100%;
        display: flex;
        flex-direction: column;
        cursor: pointer;
    }

    .card-img-container {
        position: relative;
        padding-top: 100%; /* 1:1 Aspect Ratio */
        overflow: hidden;
        background-color: #f8f9fa;
    }

    .card-img-top {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: contain;
        padding: 0.5rem;
        transition: transform 0.3s ease;
    }

    .product-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
    }

    .product-card:hover .card-img-top {
        transform: scale(1.05);
    }

    .product-description {
        font-size: 0.875rem;
        color: #6c757d;
        display: -webkit-box;
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
        overflow: hidden;
        height: 4.5rem;
        margin-bottom: 1rem;
    }

    .card-body {
        display: flex;
        flex-direction: column;
        flex: 1;
        padding: 1.25rem;
    }

    .product-price {
        color: #0d6efd;
        font-weight: 600;
        font-size: 1.5rem;
        margin-bottom: 1rem;
    }

    .card-category {
        font-size: 0.8rem;
        margin-bottom: 0.5rem;
    }

    .add-to-cart {
        transition: all 0.3s ease;
        padding: 1rem 1rem;
        font-size: 1.1rem;
        font-weight: 500;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
        margin-top: auto;
        height: 3.5rem;
    }

    .add-to-cart i {
        font-size: 1.25rem;
    }

    .add-to-cart:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(13, 110, 253, 0.2);
    }

    .add-to-cart:active {
        transform: translateY(0);
    }

    .add-to-cart:disabled {
        background-color: #ccc;
        border-color: #ccc;
        transform: none;
        box-shadow: none;
    }

    .card-footer {
        margin-top: auto;
        background: transparent;
    }

    @@media (max-width: 1200px) {
        .products-grid {
            grid-template-columns: repeat(3, 1fr);
        }
    }

    @@media (max-width: 768px) {
        .products-grid {
            grid-template-columns: repeat(2, 1fr);
        }
    }

    @@media (max-width: 576px) {
        .products-grid {
            grid-template-columns: 1fr;
        }
    }
</style>

@section Scripts {
    <script>
        $(document).ready(function () {
            var token = $('input[name="__RequestVerificationToken"]').val();

            $('.add-to-cart').click(function (e) {
                e.preventDefault();
                var button = $(this);
                var productId = button.data('product-id');
                
                button.prop('disabled', true);
                
                $.ajax({
                    url: '@Url.Action("AddToCart", "Cart")',
                    type: 'POST',
                    headers: {
                        'RequestVerificationToken': token
                    },
                    data: {
                        productId: productId,
                        quantity: 1,
                        __RequestVerificationToken: token
                    },
                    success: function (response) {
                        if (response.success) {
                            $('#cartCount').text(response.cartCount);
                            
                            Swal.fire({
                                title: 'Başarılı!',
                                text: 'Ürün sepete eklendi.',
                                icon: 'success',
                                showConfirmButton: false,
                                timer: 1500
                            });
                        } else {
                            Swal.fire({
                                title: 'Hata!',
                                text: response.message || 'Ürün sepete eklenirken bir hata oluştu.',
                                icon: 'error',
                                confirmButtonText: 'Tamam'
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            title: 'Hata!',
                            text: 'Ürün sepete eklenirken bir hata oluştu.',
                            icon: 'error',
                            confirmButtonText: 'Tamam'
                        });
                    },
                    complete: function () {
                        button.prop('disabled', false);
                    }
                });
            });
        });
    </script>
}
