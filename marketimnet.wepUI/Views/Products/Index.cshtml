@model ProductListViewModel

@{
    ViewData["Title"] = Model.CurrentCategory?.Name ?? "Ürünler";
}

@Html.AntiForgeryToken()

<div class="container">
    <div class="row mb-4">
        <div class="col">
            @if (Model.IsDiscountedPage)
            {
                <h2 class="mb-3">
                    <i class="bi bi-tag-fill text-danger me-2"></i>İndirimli Ürünler
                </h2>
                <p class="text-muted">En avantajlı fiyatlarla sizin için seçtiğimiz ürünler</p>
            }
            else if (Model.CurrentCategory != null)
            {
                <h2 class="mb-3">@Model.CurrentCategory.Name</h2>
                @if (!string.IsNullOrEmpty(Model.CurrentCategory.Description))
                {
                    <p class="text-muted">@Model.CurrentCategory.Description</p>
                }
            }
            else if (!string.IsNullOrEmpty(Model.SearchTerm))
            {
                <h2 class="mb-3">Arama Sonuçları: "@Model.SearchTerm"</h2>
            }
            else
            {
                <h2 class="mb-3">Tüm Ürünler</h2>
            }
        </div>
    </div>

    <div class="row">
        <!-- Kategoriler -->
        <div class="col-lg-3">
            <h5 class="mb-4">Kategoriler</h5>
            <div class="list-group">
                <a href="@Url.Action("Index", new { search = Model.SearchTerm })" 
                   class="list-group-item list-group-item-action @(Model.CurrentCategory == null ? "active" : "")">
                    Tüm Kategoriler
                </a>
                @foreach (var category in Model.Categories)
                {
                    var isActive = Model.CurrentCategory?.Id == category.Id;
                    <a href="@Url.Action("Index", new { categoryId = category.Id, search = Model.SearchTerm })" 
                       class="list-group-item list-group-item-action @(isActive ? "active" : "")">
                        @category.Name
                    </a>
                }
            </div>
        </div>

        <!-- Ürünler -->
        <div class="col-lg-9">
            <!-- Arama -->
            <div class="mb-4">
                <form method="get" class="d-flex">
                    <input type="hidden" name="categoryId" value="@Model.CurrentCategory?.Id" />
                    <input type="text" name="search" value="@Model.SearchTerm" class="form-control me-2" placeholder="Ürün ara..." />
                    <button type="submit" class="btn btn-primary">Ara</button>
                </form>
            </div>

            <!-- Ürün Listesi -->
            <div class="row row-cols-1 row-cols-md-3 g-4">
                @foreach (var product in Model.Products)
                {
                    <div class="col">
                        <div class="card h-100 product-card">
                            <a href="@Url.Action("Detail", new { id = product.Id })" class="product-link">
                                <div class="card-img-container">
                                    @if (!string.IsNullOrEmpty(product.ImageUrl))
                                    {
                                        <img src="@product.ImageUrl" class="card-img-top" alt="@product.Name">
                                    }
                                    else
                                    {
                                        <img src="/img/no-image.png" class="card-img-top" alt="@product.Name">
                                    }
                                </div>
                                <div class="card-body d-flex flex-column">
                                    <h5 class="card-title">@product.Name</h5>
                                    <p class="card-text text-muted">@product.Category?.Name</p>
                                    <div class="mt-auto">
                                        @if (product.DiscountedPrice.HasValue)
                                        {
                                            <p class="card-text mb-1">
                                                <span class="text-decoration-line-through text-muted">@product.Price.ToString("C")</span>
                                                <span class="text-danger fs-5 fw-bold">@product.DiscountedPrice.Value.ToString("C")</span>
                                            </p>
                                            <p class="card-text text-success">
                                                <small>%@(Math.Round((1 - product.DiscountedPrice.Value / product.Price) * 100)) indirim</small>
                                            </p>
                                        }
                                        else
                                        {
                                            <p class="card-text fs-5 fw-bold">@product.Price.ToString("C")</p>
                                        }
                                    </div>
                                </div>
                            </a>
                            <div class="card-footer bg-transparent border-0 p-3">
                                <button class="btn btn-primary w-100 add-to-cart" data-product-id="@product.Id">
                                    <i class="fas fa-shopping-cart me-2"></i>Sepete Ekle
                                </button>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <!-- Sayfalama -->
            @if (Model.TotalPages > 1)
            {
                <nav class="mt-4">
                    <ul class="pagination justify-content-center">
                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { categoryId = Model.CurrentCategory?.Id, search = Model.SearchTerm, page = i })">
                                    @i
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            }
        </div>
    </div>
</div>

<hr class="footer-divider my-8">

@section Scripts {
    <script>
        $(document).ready(function () {
            var token = $('input[name="__RequestVerificationToken"]').val();

            $('.add-to-cart').click(function (e) {
                e.preventDefault();
                var button = $(this);
                var productId = button.data('product-id');
                
                // Butonu devre dışı bırak
                button.prop('disabled', true);
                
                $.ajax({
                    url: '@Url.Action("AddToCart", "Cart")',
                    type: 'POST',
                    headers: {
                        'RequestVerificationToken': token
                    },
                    data: {
                        productId: productId,
                        quantity: 1,
                        __RequestVerificationToken: token
                    },
                    success: function (response) {
                        if (response.success) {
                            // Sepet sayısını güncelle
                            $('#cartCount').text(response.cartCount);
                            
                            // Başarılı mesajı göster
                            Swal.fire({
                                title: 'Başarılı!',
                                text: 'Ürün sepete eklendi.',
                                icon: 'success',
                                showConfirmButton: false,
                                timer: 1500
                            });
                        } else {
                            Swal.fire({
                                title: 'Hata!',
                                text: response.message || 'Ürün sepete eklenirken bir hata oluştu.',
                                icon: 'error',
                                confirmButtonText: 'Tamam'
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            title: 'Hata!',
                            text: 'Ürün sepete eklenirken bir hata oluştu.',
                            icon: 'error',
                            confirmButtonText: 'Tamam'
                        });
                    },
                    complete: function () {
                        // Butonu tekrar aktif et
                        button.prop('disabled', false);
                    }
                });
            });
        });
    </script>
}

<style>
    .product-link {
        text-decoration: none;
        color: inherit;
        display: block;
    }

    .product-link:hover {
        text-decoration: none;
        color: inherit;
    }

    .product-card {
        transition: transform 0.3s, box-shadow 0.3s;
        border: none;
        border-radius: 0.5rem;
        overflow: hidden;
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        height: 100%;
        display: flex;
        flex-direction: column;
        cursor: pointer;
    }

    .product-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
    }

    .card-img-container {
        position: relative;
        padding-top: 100%; /* 1:1 Aspect Ratio */
        overflow: hidden;
        background-color: #f8f9fa;
    }

    .card-img-top {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: contain;
        padding: 1rem;
    }

    .add-to-cart {
        transition: all 0.3s ease;
        padding: 1rem;
        font-size: 1.1rem;
        font-weight: 500;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
        height: 3.5rem;
    }

    .add-to-cart i {
        font-size: 1.25rem;
    }

    .add-to-cart:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(13, 110, 253, 0.2);
    }

    .card-footer {
        background: transparent;
        border-top: none;
    }

    .card-body {
        flex: 1;
        display: flex;
        flex-direction: column;
        padding: 1.25rem;
    }

    .card-title {
        font-size: 1.1rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
    }
</style> 